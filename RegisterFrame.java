// RegisterFrame.java
// 2430 OOPs I Program 3
package logins;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class RegisterFrame extends JFrame
{
    public static void main(String[] args)
    {
        try
        {
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            for (UIManager.LookAndFeelInfo info : UIManager.
                    getInstalledLookAndFeels())
            {
                if (!"Nimbus".equals(info.getName()))
                {
                    continue;
                }
                UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
        catch (ClassNotFoundException | InstantiationException
                | IllegalAccessException | UnsupportedLookAndFeelException ex)
        {
            Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE,
                    null, ex);
        }
        //</editor-fold>
        EventQueue.invokeLater(new Runnable()
        {

            @Override
            public void run()
            {
                String cUser = "carrj";
                new RegisterFrame(cUser).setVisible(true);
            }
        });
    }
    DefaultListModel<String> listModel = new DefaultListModel();
    String currentUser;
    private JButton LogOut2_btn;
    private JButton getCourses_btn;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JList<String> jList1;
    private JScrollPane jScrollPane1;
    private JButton registerFor_btn;

    public RegisterFrame(String currentUser)
    {
        this.initComponents();
        this.setLocationRelativeTo(null);
        this.currentUser = currentUser;
    }

    /**
     This method is called from within the constructor to initialize the form.
     WARNING: Do NOT modify this code. The content of this method is always
     regenerated by the Form Editor.
     */

    public String getcurrentUser()
    {
        return this.currentUser;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code"> 
    private void initComponents()
    {
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        registerFor_btn = new javax.swing.JButton();
        LogOut2_btn = new javax.swing.JButton();
        getCourses_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registration Page");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        registerFor_btn.setText("Register for Selected Course");
        registerFor_btn.setToolTipText("");
        registerFor_btn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                RegisterFrame.this.registerFor_btnActionPerformed(evt);
            }
        });

        LogOut2_btn.setText("Log Out");
        LogOut2_btn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                LogOut2_btnActionPerformed(evt);
            }
        });

        getCourses_btn.setText("Fetch Courses");
        getCourses_btn.setToolTipText("");
        getCourses_btn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                getCourses_btnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel1.setText("Available Courses:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(registerFor_btn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 105, Short.MAX_VALUE)
                        .addComponent(getCourses_btn)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(LogOut2_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(LogOut2_btn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(getCourses_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(registerFor_btn)
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>  

    private void LogOut2_btnActionPerformed(ActionEvent evt)
    {
        this.setVisible(false);
    }

    private void getCourses_btnActionPerformed(ActionEvent evt)
    {
        this.listModel.clear();
        for (int i = 0; i < LoginFrame.courses.getNumItems(); ++i)
        {
            this.listModel.addElement(LoginFrame.courses.getCourse(i).getCId());
        }
        this.jList1.setModel(this.listModel);
    }

    private void registerFor_btnActionPerformed(ActionEvent evt)
    {
        String toRegister = this.jList1.getSelectedValue();
        String user = this.currentUser;
        Object p = LoginFrame.people.findFromUsername(user);
        Course c = LoginFrame.courses.findCourse(toRegister);
        if (p instanceof Student)
        {
            c.taking.add(p);
            SuccessFrame sp = new SuccessFrame();
            sp.setVisible(true);
        }
        else if (p instanceof Professor && !LoginFrame.courses.findCourse(
                toRegister).hasTeacher())
        {
            Professor o = (Professor) LoginFrame.people.findFromUsername(user);
            LoginFrame.courses.findCourse(toRegister).addTeacher(o);
            SuccessFrame sp = new SuccessFrame();
            sp.setVisible(true);
        }
        else
        {
            ErrorFrame ep = new ErrorFrame();
            ep.setVisible(true);
        }
    }

}
